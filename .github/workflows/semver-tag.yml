name: SemVer Tag

on:
  push:
    branches:
      - main

jobs:
  semver:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # important to get full history for tags

      - name: Get latest tag or initialize
        id: tag
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LATEST_TAG" ]; then
            echo "No tags found, initializing first version as 1.0.0"
            NEW_VERSION="1.0.0"
          else
            echo "Latest tag: $LATEST_TAG"

            # Get commits since last tag
            COMMITS=$(git log "$LATEST_TAG"..HEAD --pretty=format:"%s")
            echo "Commits since last tag:"
            echo "$COMMITS"

            # Default bump
            BUMP="patch"

            # Determine bump type based on commit messages
            if echo "$COMMITS" | grep -qE 'feat!|BREAKING CHANGE|chore!'; then
              BUMP="major"
            elif echo "$COMMITS" | grep -qE '^feat'; then
              BUMP="minor"
            else
              BUMP="patch"
            fi

            echo "Bump type: $BUMP"

            # Split current version
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"

            case $BUMP in
              major) MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0 ;;
              minor) MINOR=$((MINOR+1)); PATCH=0 ;;
              patch) PATCH=$((PATCH+1)) ;;
            esac

            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Create Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating tag $NEW_VERSION"
          git tag $NEW_VERSION
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" $NEW_VERSION
